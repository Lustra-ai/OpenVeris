[project]
name = "OpenVeris"
version = "0.0.1"
description = "The automated anomaly detection system for Ukrainian public officials' asset declarations."
requires-python = ">=3.12"
dependencies = [
    "pandas>=2.3.3",
    "tqdm>=4.67.1",
    "rich==14.2.0",
    "crawlee==1.0.4",
    "httpx==0.28.1",
    "psycopg2-binary==2.9.11",
    "redis==7.0.1",
    "pyyaml==6.0.3",
    "python-dotenv==1.2.1"
]

[project.optional-dependencies]
dev = [
    "jupyter>=1.1.1",
    "nbdev>=2.4.6",
    "ruff>=0.14.2",
    "mypy>=1.18.2",
    "types-redis~=4.6.0",
    "types-psycopg2~=2.9.21",
]

[build-system]
requires = ["uv_build>=0.9.6"]
build-backend = "uv_build"

[tool.uv.build-backend]
module-name = "src"
module-root = ""

# Configure PyTorch to use CUDA 12.6 wheels
[[tool.uv.index]]
name = "pytorch-cu126"
url = "https://download.pytorch.org/whl/cu126"
explicit = true

[tool.uv.sources]
torch = { index = "pytorch-cu126" }

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Start lenient, can tighten later
disallow_any_generics = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_optional = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["psycopg2.*", "redis.*", "crawlee.*"]
ignore_missing_imports = true

# =============================================================================
# LINTING & FORMATTING CONFIGURATION
# =============================================================================

[tool.ruff]
line-length = 120
target-version = "py312"

# Exclude paths
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
]

[tool.ruff.lint]
# Enable specific rule sets
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # Pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
]

# Ignore specific rules
ignore = [
    "E501",   # Line too long (handled by formatter)
    "B008",   # Do not perform function call in argument defaults
    "C901",   # Complex structure (we'll handle manually)
]

# Allow autofix for all enabled rules
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Unused imports in __init__.py

[tool.ruff.lint.isort]
known-first-party = ["src"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.format]
# Use Ruff's formatter (similar to Black)
quote-style = "double"
indent-style = "space"
line-ending = "auto"